
// import { useState } from 'react';
// import {
//   Alert,
//   ScrollView,
//   StatusBar,
//   StyleSheet,
//   Text,
//   TextInput,
//   TouchableOpacity,
//   View
// } from 'react-native';
// import { apiService } from '../config/api';

import AsyncStorage from '@react-native-async-storage/async-storage';
import React, { useState } from 'react';
import {
  Alert,
  ScrollView,
  StatusBar,
  StyleSheet,
  Text,
  TextInput,
  TouchableOpacity,
  View,
} from 'react-native';
import { apiService } from '../config/api';



export default function CreatePostScreen({ navigation }) {
  const [loading, setLoading] = useState(false);
  const [selectedCategory, setSelectedCategory] = useState('');
  const [title, setTitle] = useState('');
  const [description, setDescription] = useState('');
  const [price, setPrice] = useState('');
  const [location, setLocation] = useState('');
  const [images, setImages] = useState([]);
  
  // Dynamic fields
  const [year, setYear] = useState('');
  const [kilometers, setKilometers] = useState('');
  const [breed, setBreed] = useState('');
  const [age, setAge] = useState('');

  // All categories
  const categories = [
    { id: 1, name: 'ркХрк╛рк░', icon: 'ЁЯЪЧ', needsVehicleInfo: true },
    { id: 2, name: 'ркмрк╛ркЗркХ', icon: 'ЁЯПНя╕П', needsVehicleInfo: true },
    { id: 3, name: 'рк╕рлНркХрлВркЯрк░', icon: 'ЁЯЫ╡', needsVehicleInfo: true },
    { id: 4, name: 'ркЯрлНрк░рлЗркХрлНркЯрк░', icon: 'ЁЯЪЬ', needsVehicleInfo: true },
    { id: 5, name: 'ркЧрк╛ркп', icon: 'ЁЯРД', needsAnimalInfo: true },
    { id: 6, name: 'ркнрлЗркВрк╕', icon: 'ЁЯРГ', needsAnimalInfo: true },
    { id: 7, name: 'ркмркХрк░рлА', icon: 'ЁЯРР', needsAnimalInfo: true },
    { id: 8, name: 'ркШрлЛркбрлЛ', icon: 'ЁЯР┤', needsAnimalInfo: true },
    { id: 9, name: 'ркорк░ркШрлА', icon: 'ЁЯРФ', needsAnimalInfo: true },
    { id: 10, name: 'ркЦрлЗркд', icon: 'ЁЯМ╛', needsLandInfo: true },
    { id: 11, name: 'ркЬркорлАрки', icon: 'ЁЯПЮя╕П', needsLandInfo: true },
    { id: 12, name: 'ркоркХрк╛рки', icon: 'ЁЯПа', needsPropertyInfo: true },
    { id: 13, name: 'ркорлЛркмрк╛ркЗрк▓', icon: 'ЁЯУ▒', needsBasicInfo: true },
    { id: 14, name: 'рклрк░рлНркирк┐ркЪрк░', icon: 'ЁЯкС', needsBasicInfo: true },
    { id: 15, name: 'ркирлЛркХрк░рлА', icon: 'ЁЯТ╝', needsJobInfo: true },
  ];

  const selectedCategoryData = categories.find(c => c.name === selectedCategory);

  const handleImagePick = () => {
    // Will implement image picker later
    Alert.alert('рклрлЛркЯрлЛ', 'рклрлЛркЯрлЛ рккрк╕ркВркж ркХрк░рк╡рк╛ркирлА рк╕рлБрк╡рк┐ркзрк╛ ркЯрлВркВркХ рк╕ркоркпркорк╛ркВ ркЙрккрк▓ркмрлНркз ркерк╢рлЗ');
  };

  const handleSubmit = async () => {
  // Validation
  if (!selectedCategory) {
    Alert.alert('ркнрлВрк▓', 'ркХрлГрккрк╛ ркХрк░рлАркирлЗ ркХрлЗркЯрлЗркЧрк░рлА рккрк╕ркВркж ркХрк░рлЛ');
    return;
  }
  if (!title) {
    Alert.alert('ркнрлЪ╫Ь', 'ркХрлГрккрк╛ ркХрк░рлАркирлЗ рк╢рлАрк░рлНрк╖ркХ ркжрк╛ркЦрк▓ ркХрк░рлЛ');
    return;
  }
  if (!price) {
    Alert.alert('ркнрлВрк▓', 'ркХрлГрккрк╛ ркХрк░рлАркирлЗ ркХрк┐ркВркоркд ркжрк╛ркЦрк▓ ркХрк░рлЛ');
    return;
  }
  if (!location) {
    Alert.alert('ркнрлВрк▓', 'ркХрлГрккрк╛ ркХрк░рлАркирлЗ рк╕рлНркерк│ ркжрк╛ркЦрк▓ ркХрк░рлЛ');
    return;
  }

  setLoading(true);

  try {
    // Get user data from storage
    const userDataString = await AsyncStorage.getItem('userData');
    const userData = JSON.parse(userDataString);

    if (!userData) {
      Alert.alert('ркнрлВрк▓', 'ркХрлГрккрк╛ ркХрк░рлАркирлЗ рклрк░рлА рк▓рлЙркЧрк┐рки ркХрк░рлЛ');
      navigation.navigate('Welcome');
      return;
    }

    // Prepare post data
    const postData = {
      title: title,
      description: description || 'рк╡ркзрлБ ркорк╛рк╣рк┐ркдрлА ркорк╛ркЯрлЗ рк╕ркВрккрк░рлНркХ ркХрк░рлЛ',
      price: parseFloat(price),
      priceType: 'NEGOTIABLE',
      condition: 'GOOD',
      categoryId: 1, // Static for now
      subCategoryId: selectedCategoryData?.id || 1, // Using category id
      districtId: userData.districtId,
      talukaId: userData.talukaId,
      villageId: userData.villageId,
      address: location,
      contactMethod: 'BOTH',
      contactPhone: userData.mobile,
    };

    // Add dynamic fields based on category
    if (selectedCategoryData?.needsVehicleInfo) {
      // Add vehicle specific data if needed
      postData.description = `${description}\nрк╡рк░рлНрк╖: ${year}, ркХрк┐.ркорлА.: ${kilometers}`;
    } else if (selectedCategoryData?.needsAnimalInfo) {
      // Add animal specific data if needed
      postData.description = `${description}\nркЬрк╛ркдрк┐: ${breed}, ркЙркВркорк░: ${age}`;
    }

    const response = await apiService.createPost(postData);

    if (response.success) {
      Alert.alert(
        'рк╕рклрк│ркдрк╛!',
        'ркдркорк╛рк░рлА ркЬрк╛рк╣рлЗрк░рк╛ркд рккрлЛрк╕рлНркЯ ркеркИ ркЧркИ ркЫрлЗ!',
        [
          {
            text: 'ркарлАркХ ркЫрлЗ',
            onPress: () => navigation.navigate('Account')
          }
        ]
      );
    } else {
      Alert.alert('ркнрлВрк▓', response.message || 'ркЬрк╛рк╣рлЗрк░рк╛ркд рккрлЛрк╕рлНркЯ ркХрк░рк╡рк╛ркорк╛ркВ рк╕ркорк╕рлНркпрк╛');
    }
  } catch (error) {
    if (error.message.includes('рк▓рлЙркЧрк┐рки')) {
      Alert.alert('рк╕ркдрлНрк░ рк╕ркорк╛рккрлНркд', error.message, [
        {
          text: 'ркарлАркХ ркЫрлЗ',
          onPress: () => navigation.navigate('Welcome')
        }
      ]);
    } else {
      Alert.alert('ркнрлВрк▓', 'ркХркирлЗркХрлНрк╢рки рк╕ркорк╕рлНркпрк╛. ркХрлГрккрк╛ ркХрк░рлАркирлЗ рклрк░рлА рккрлНрк░ркпрк╛рк╕ ркХрк░рлЛ.');
    }
    console.error('Create Post Error:', error);
  } finally {
    setLoading(false);
  }
};

  return (
    <View style={styles.container}>
      <StatusBar barStyle="light-content" backgroundColor="#4CAF50" />

      {/* Header */}
      <View style={styles.header}>
        <TouchableOpacity 
          style={styles.backButton}
          onPress={() => navigation.goBack()}
        >
          <Text style={styles.backIcon}>├Ч</Text>
        </TouchableOpacity>
        <Text style={styles.headerTitle}>ркЬрк╛рк╣рлЗрк░рк╛ркд ркорлВркХрлЛ</Text>
        <View style={styles.placeholder} />
      </View>

      <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>
        {/* Category Selection */}
        <View style={styles.section}>
          <Text style={styles.label}>ркХрлЗркЯрлЗркЧрк░рлА рккрк╕ркВркж ркХрк░рлЛ *</Text>
          <ScrollView 
            horizontal 
            showsHorizontalScrollIndicator={false}
            style={styles.categoryScroll}
          >
            {categories.map((cat) => (
              <TouchableOpacity
                key={cat.id}
                style={[
                  styles.categoryChip,
                  selectedCategory === cat.name && styles.categoryChipActive
                ]}
                onPress={() => setSelectedCategory(cat.name)}
              >
                <Text style={styles.categoryIcon}>{cat.icon}</Text>
                <Text style={[
                  styles.categoryText,
                  selectedCategory === cat.name && styles.categoryTextActive
                ]}>
                  {cat.name}
                </Text>
              </TouchableOpacity>
            ))}
          </ScrollView>
        </View>

        {/* Image Upload */}
        <View style={styles.section}>
          <Text style={styles.label}>рклрлЛркЯрлЛ ркЙркорлЗрк░рлЛ *</Text>
          <TouchableOpacity 
            style={styles.imageUploadBox}
            onPress={handleImagePick}
          >
            <Text style={styles.uploadIcon}>ЁЯУ╕</Text>
            <Text style={styles.uploadText}>рклрлЛркЯрлЛ рккрк╕ркВркж ркХрк░рлЛ</Text>
            <Text style={styles.uploadSubtext}>ркорк╣ркдрлНркдрко 5 рклрлЛркЯрлЛ</Text>
          </TouchableOpacity>
        </View>

        {/* Title */}
        <View style={styles.section}>
          <Text style={styles.label}>рк╢рлАрк░рлНрк╖ркХ *</Text>
          <TextInput
            style={styles.input}
            placeholder="ркжрк╛.ркд. Bajaj Pulsar 150 ркЕркерк╡рк╛ ркжрлЗрк╢рлА ркЧрк╛ркп"
            placeholderTextColor="#999"
            value={title}
            onChangeText={setTitle}
          />
        </View>

        {/* Description */}
        <View style={styles.section}>
          <Text style={styles.label}>рк╡рк░рлНркгрки</Text>
          <TextInput
            style={[styles.input, styles.textArea]}
            placeholder="ркдркорк╛рк░рлА рк╡рк╕рлНркдрлБ рк╡рк┐рк╢рлЗ рк╡рк┐ркЧркдрк╡рк╛рк░ ркорк╛рк╣рк┐ркдрлА ркЖрккрлЛ..."
            placeholderTextColor="#999"
            value={description}
            onChangeText={setDescription}
            multiline
            numberOfLines={4}
          />
        </View>

        {/* Dynamic Fields - Vehicle Info */}
        {selectedCategoryData?.needsVehicleInfo && (
          <>
            <View style={styles.row}>
              <View style={styles.halfInput}>
                <Text style={styles.label}>рк╡рк░рлНрк╖ *</Text>
                <TextInput
                  style={styles.input}
                  placeholder="2020"
                  placeholderTextColor="#999"
                  value={year}
                  onChangeText={setYear}
                  keyboardType="numeric"
                />
              </View>
              <View style={styles.halfInput}>
                <Text style={styles.label}>ркХрк┐рк▓рлЛркорлАркЯрк░ *</Text>
                <TextInput
                  style={styles.input}
                  placeholder="15000"
                  placeholderTextColor="#999"
                  value={kilometers}
                  onChangeText={setKilometers}
                  keyboardType="numeric"
                />
              </View>
            </View>
          </>
        )}

        {/* Dynamic Fields - Animal Info */}
        {selectedCategoryData?.needsAnimalInfo && (
          <>
            <View style={styles.row}>
              <View style={styles.halfInput}>
                <Text style={styles.label}>ркЬрк╛ркдрк┐</Text>
                <TextInput
                  style={styles.input}
                  placeholder="ркжрк╛.ркд. ркЧрлАрк░, ркорлБрк░рлНрк░рк╛рк╣"
                  placeholderTextColor="#999"
                  value={breed}
                  onChangeText={setBreed}
                />
              </View>
              <View style={styles.halfInput}>
                <Text style={styles.label}>ркЙркВркорк░</Text>
                <TextInput
                  style={styles.input}
                  placeholder="ркжрк╛.ркд. 3 рк╡рк░рлНрк╖"
                  placeholderTextColor="#999"
                  value={age}
                  onChangeText={setAge}
                />
              </View>
            </View>
          </>
        )}

        {/* Price */}
        <View style={styles.section}>
          <Text style={styles.label}>ркХрк┐ркВркоркд (тВ╣) *</Text>
          <TextInput
            style={styles.input}
            placeholder="ркжрк╛.ркд. 45000"
            placeholderTextColor="#999"
            value={price}
            onChangeText={setPrice}
            keyboardType="numeric"
          />
        </View>

        {/* Location */}
        <View style={styles.section}>
          <Text style={styles.label}>рк╕рлНркерк│ *</Text>
          <TextInput
            style={styles.input}
            placeholder="ркжрк╛.ркд. ркЕркоркжрк╛рк╡рк╛ркж"
            placeholderTextColor="#999"
            value={location}
            onChangeText={setLocation}
          />
        </View>

        {/* Info Box */}
        <View style={styles.infoBox}>
          <Text style={styles.infoIcon}>тД╣я╕П</Text>
          <Text style={styles.infoText}>
            ркдркорк╛рк░рлА ркЬрк╛рк╣рлЗрк░рк╛ркд ркЪркХрк╛рк╕ркгрлА рккркЫрлА 24 ркХрк▓рк╛ркХркорк╛ркВ рк▓рк╛ркЗрк╡ ркерк╢рлЗ
          </Text>
        </View>

        {/* Submit Button */}
        <TouchableOpacity 
          style={styles.submitButton}
          onPress={handleSubmit}
        >
          <Text style={styles.submitText}>ркЬрк╛рк╣рлЗрк░рк╛ркд рккрлЛрк╕рлНркЯ ркХрк░рлЛ</Text>
        </TouchableOpacity>

        <View style={{ height: 30 }} />
      </ScrollView>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F5F5F5',
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    backgroundColor: '#4CAF50',
    paddingTop: 40,
    paddingBottom: 15,
    paddingHorizontal: 15,
    elevation: 5,
  },
  backButton: {
    width: 40,
    height: 40,
    justifyContent: 'center',
    alignItems: 'center',
  },
  backIcon: {
    fontSize: 36,
    color: '#FFFFFF',
    fontWeight: 'bold',
  },
  headerTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#FFFFFF',
  },
  placeholder: {
    width: 40,
  },
  content: {
    flex: 1,
  },
  section: {
    backgroundColor: '#FFFFFF',
    padding: 15,
    marginTop: 10,
  },
  label: {
    fontSize: 14,
    fontWeight: '600',
    color: '#333',
    marginBottom: 8,
  },
  categoryScroll: {
    marginTop: 10,
  },
  categoryChip: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 16,
    paddingVertical: 10,
    borderRadius: 20,
    backgroundColor: '#F5F5F5',
    marginRight: 10,
    borderWidth: 2,
    borderColor: '#E0E0E0',
  },
  categoryChipActive: {
    backgroundColor: '#E8F5E9',
    borderColor: '#4CAF50',
  },
  categoryIcon: {
    fontSize: 20,
    marginRight: 6,
  },
  categoryText: {
    fontSize: 14,
    color: '#666',
    fontWeight: '600',
  },
  categoryTextActive: {
    color: '#2E7D32',
    fontWeight: 'bold',
  },
  imageUploadBox: {
    borderWidth: 2,
    borderColor: '#C8E6C9',
    borderStyle: 'dashed',
    borderRadius: 12,
    padding: 30,
    alignItems: 'center',
    backgroundColor: '#F1F8E9',
  },
  uploadIcon: {
    fontSize: 40,
    marginBottom: 10,
  },
  uploadText: {
    fontSize: 16,
    fontWeight: '600',
    color: '#2E7D32',
    marginBottom: 4,
  },
  uploadSubtext: {
    fontSize: 12,
    color: '#666',
  },
  input: {
    borderWidth: 1.5,
    borderColor: '#C8E6C9',
    borderRadius: 10,
    paddingHorizontal: 15,
    paddingVertical: 12,
    fontSize: 16,
    color: '#333',
    backgroundColor: '#FAFAFA',
  },
  textArea: {
    height: 100,
    textAlignVertical: 'top',
  },
  row: {
    flexDirection: 'row',
    backgroundColor: '#FFFFFF',
    paddingHorizontal: 15,
    paddingTop: 15,
    marginTop: 10,
  },
  halfInput: {
    flex: 1,
    marginHorizontal: 5,
  },
  infoBox: {
    flexDirection: 'row',
    backgroundColor: '#E3F2FD',
    padding: 15,
    marginHorizontal: 15,
    marginTop: 20,
    borderRadius: 10,
    alignItems: 'center',
  },
  infoIcon: {
    fontSize: 20,
    marginRight: 10,
  },
  infoText: {
    flex: 1,
    fontSize: 13,
    color: '#1565C0',
    lineHeight: 20,
  },
  submitButton: {
    backgroundColor: '#4CAF50',
    marginHorizontal: 15,
    marginTop: 20,
    paddingVertical: 16,
    borderRadius: 12,
    alignItems: 'center',
    elevation: 3,
  },
  submitText: {
    color: '#FFFFFF',
    fontSize: 18,
    fontWeight: 'bold',
  },
});